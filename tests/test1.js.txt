console.log('starting test');
var chai = require('chai');
var chaiHttp = require('chai-http');
var async = require('async');

var assert = chai.assert;
var expect = chai.expect;
var should = chai.should();

var http = require('http');
chai.use(chaiHttp);

if (!global.Promise) {
  var q = require('q');
  chai.request.addPromises(q.Promise);
}

describe('Test server with no arguments', function () {
	this.timeout(15000);
	  
    it('should return 200', function (done) {
      http.get('http://localhost:8080/app/item/1', function (res) {
        assert.equal(200, res.statusCode);
        done();
      });
    });	
  });

  //defines a test suite
  describe('Business Unit Test Result', function () {
      varresults, response;
      //defines a precondition that must be executed before any test is done
      before(function(done) {
          agent = chai.request.agent('http://localhost:88');
          agent.get('/Framework.jsp').end( function (err2, res2) {
              return agent.get('/dispatcher/products').end( function (err, res) {
                  expect(err).to.be.null;
                  expect(res).to.have.status(200);
                  response = res;
                  result = res.body;
                  done();
                  });
            });
      }
  }